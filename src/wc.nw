\section{Character Counting}

<<wc.c>>=
<<Include the standard I/O functions.>>
<<Include the boolean type and values.>>
@

Until the end of the file, count characters by incrementing a \cee{double nc}.
<<wc.c>>=
double char_count()
{
    double nc = 0;

    while (getchar() != EOF)
        ++nc;

    return nc;
}
@


\section{Line Counting}

Until the end of the file, count the newline characters.
<<wc.c>>=
int line_count()
{
    int c, nl = 0;
    <<For each character [[c]] until [[EOF]]>>
        if (<<the character is a newline>>)
            ++nl;

    return nl;
}
@


\subsection{Exercise 1-8}

<<wc.c>>=
bool is_whitespace(int c)
{
    return (<<the character is whitespace>>);
}


@


<<wc.c>>=
double ws_count()
{
    double ns = 0;
    int c = 0;

    <<For each character [[c]] until [[EOF]]>>
        if (is_whitespace(c))
            ++ns;

    return ns;
}
@


\section{Word Counting}

<<wc.c>>=
#define IN  1
#define OUT 0
@

<<wc.c>>=
int main()
{
    int c, nl, nw, nc, state;

    state = OUT;
    nl = nw = nc = 0;
    <<For each character [[c]] until [[EOF]]>> {
        ++nc;
        if (<<the character is a newline>>)
            ++nl;
        if (<<the character is whitespace>>)
            state = OUT;
        else if (state == OUT) {
          state = IN;
          ++nw;
        }
    }

    printf("%7d%8d%8d\n", nl, nw, nc);

    return 0;
}
@
